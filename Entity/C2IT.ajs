// https://github.com/archimatetool/archi-scripting-plugin/wiki
console.show(); 
console.clear();
console.log("C2IT analyzer\n=============");

msg = "Elements: " + $('element').size() + "\n";
msg += "Relationships: " + $('relationship').size() + "\n";
msg += "Views: " + $('view').size();
//window.alert(msg); 
console.log(msg);


console.log("\nProperties list\n===============");
$("*").each(function(obj) {
    if(obj.prop().length > 0) {
        console.log(obj.name + " # " + obj.prop())
    }
	
	
})

console.log("\nRelationships\n=============");

$(".Threat assessment").rels().each(function(r) {
//    if(r.source.type === "application-process") {
        console.log(' - ', r.name, ' # ', r.type);
//    }
});


$(".Threat assessment").each(function(r) {
        console.log(r.id);
        r.fontColor = "#FF0000";
});
 
// Views (NAF) for easy traversal as type of blocks and relations are know for each of them

// console.log("..... Listing $("Digital) Signal processing").find() ...."+"\r"+$("*").find()+"\r");
// console.log("..... Listing $("*").children() ...."+"\r"+$("*").children()+"\r");





$("view").each(function(view) {
    var bytes = $.model.renderViewAsBase64(view, "PNG", {scale: 1, margin: 20});
    var fileName = "/Users/Clu/Documents/" + view.name + ".png";
    $.fs.writeFile(fileName, bytes, "BASE64");
    console.log("write a file")
});

// Check and Chef lint/automated test style response with [X] [O] with coldors: console.setTextColor(redValue, greenValue, blueValue);
// Write problems as: console.error(error);

// Commandline arcguments: for testing different requirment values to check model and where there are problems:
var arguments = $.process.argv;

for(i = 0; i < arguments.length; i++) {
    console.log(arguments[i]);
}